---
heat_template_version: 2016-04-08

parameters:
    job_name:
        type: string
        description: Name of job running this template
    ssh_key:
        type: string
        description: SSH Key name to use (Public key must exist in OpenStack)
    index:
        type: number
    group:
        type: number
        default: "0"
    vm_flavor:
        type: string
        default: v1-standard-1
        description: OpenStack Flavor to use
    vm_image:
        type: string
        description: VM Image to spin up

resources:
    port:
        type: "OS::Neutron::Port"
        properties:
            allowed_address_pairs:
                - ip_address: 10.32.6.0/23
            network: oranci
    boot_volume:
        type: OS::Cinder::Volume
        properties:
            size: 40
            image: {get_param: vm_image}
    instance:
        type: "OS::Nova::Server"
        properties:
            flavor: {get_param: vm_flavor}
            image: {get_param: vm_image}
            # block_device_mapping_v2:
            #     - device_name: vda
            #       volume_id: {get_resource: boot_volume}
            #       delete_on_termination: true
            name:
                str_replace:
                    template: JOB_NAME-GROUP-VM_TYPE-INDEX
                    params:
                        "JOB_NAME": {get_param: job_name}
                        "GROUP": {get_param: group}
                        "VM_TYPE":
                            str_split: [' [', {get_param: vm_image}, 0]
                        "INDEX": {get_param: index}
            networks:
                - port: {get_resource: port}
            key_name: {get_param: ssh_key}
            # user_data: |
            #     #!/bin/bash
            #     until host google.com &>/dev/null
            #     do
            #         echo "Waiting until google.com is resolvable..."
            #     done
    volume_attachment:
        type: OS::Cinder::VolumeAttachment
        properties:
            volume_id: {get_resource: boot_volume}
            instance_uuid: {get_resource: instance}


outputs:
    ip:
        description: IP address of the instance
        value: {get_attr: [instance, networks, odlci, 0]}
