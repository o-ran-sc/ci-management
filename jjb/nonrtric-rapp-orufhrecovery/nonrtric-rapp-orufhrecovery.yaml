---
- project:
    name: nonrtric-rapp-orufhrecovery-project-view
    project-name: nonrtric-rapp-orufhrecovery
    views:
      - project-view

- project: &orufhrecovery_common
    name: nonrtric-rapp-orufhrecovery-info
    project: nonrtric/rapp/orufhrecovery
    project-name: nonrtric-rapp-orufhrecovery
    # maven settings file has docker credentials
    mvn-settings: nonrtric-rapp-orufhrecovery-settings
    build-node: centos7-builder-1c-1g
    jobs:
      - gerrit-info-yaml-verify

- project:
    <<: *orufhrecovery_common
    name: nonrtric-rapp-orufhrecovery-release
    # maven release requires sigul which requires centos
    # container release requires docker
    build-node: centos7-docker-2c-8g
    jobs:
      - '{project-name}-gerrit-release-jobs'

- project:
    <<: *orufhrecovery_common
    name: nonrtric-rapp-orufhrecovery
    project-name: '{name}'
    # image name
    docker-name: 'o-ran-sc/nonrtric-rapp-orufhrecovery'
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory with Dockerfile
    docker-root: 'scriptversion/app'
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'scriptversion/app/.*'
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
      - gerrit-maven-docker-stage
    stream:
      - master:
          branch: master

- project:
    <<: *orufhrecovery_common
    name: nonrtric-rapp-orufhrecovery-consumer
    project-name: '{name}'
    # image name
    docker-name: 'o-ran-sc/nonrtric-rapp-orufhrecovery-consumer'
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory with Dockerfile
    docker-root: 'goversion'
    # Directory where go test should be run
    go-root: 'goversion'
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'goversion/.*'
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
      - gerrit-go-verify
      - gerrit-maven-docker-stage
    stream:
      - master:
          branch: master

- project:
    <<: *orufhrecovery_common
    name: nonrtric-rapp-orufhrecovery-consumer-sonar
    project-name: '{name}'
    # prescan script requires ubuntu
    # golang is only on docker-enabled nodes
    build-node: ubuntu1804-docker-4c-4g
    sonar-prescan-script: !include-raw-escape: prescan-oruclosedloopconsumer-ubuntu.sh
    sonar-project-file: ""
    java-version: openjdk11
    # use sonarcloud values from defaults.yaml
    sonar-properties: |
        # Required metadata
        sonar.login={sonarcloud_api_token}
        sonar.projectKey={sonarcloud_project_organization}_nonrtric-rapp-orufhrecovery-consumer
        sonar.organization={sonarcloud_project_organization}
        # Encoding
        sonar.build.sourceEncoding=UTF-8
        # Language
        sonar.language=go
        # Source
        sonar.sources=.
        # Unit tests
        sonar.go.coverage.reportPaths=goversion/coverage.txt
        # Inclusions
        sonar.inclusions=goversion/internal/**/**.go,goversion/**.go
        # Exclusions
        sonar.exclusions=goversion/mocks/**.go,goversion/internal/**/**_test.go,goversion/**_test.go,goversion/simulator/**.go
    jobs:
      - gerrit-sonar-prescan-script
