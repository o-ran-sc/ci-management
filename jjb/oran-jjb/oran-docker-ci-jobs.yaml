---
# Macros and templates for using Docker as CI to create 
# DEB/RPM/etc. packages. The docker exports the files it
# creates, then a builder pushes files to PackageCloud.
# The docker image is discarded, not pushed to a registry.
# Uses builders defined in, and mirrors the structure of,
# global-jjb resource jjb/lf-docker-jobs.yaml

- builder:
    name: oran-packagecloud-file-provider
    builders:
      - config-file-provider:
          files:
            - file-id: ".packagecloud"
              target: "$HOME/.packagecloud"
      - config-file-provider:
          files:
            - file-id: "packagecloud_api"
              target: "$HOME/packagecloud_api"

# Requires these environment variables:
# PACKAGECLOUD_ACCOUNT, PACKAGECLOUD_REPO,
# DEBIAN_DISTRIBUTION_VERSION, RPM_DISTRIBUTION_VERSION
- builder:
    name: oran-packagecloud-push
    builders:
      - shell: !include-raw: shell/packagecloud-push.sh

- oran_docker_ci_common: &oran_docker_ci_common
    name: oran-docker-ci-common

    project-type: freestyle
    node: "{build-node}"

    branch: master
    build-days-to-keep: 7
    build-timeout: 60
    submodule-disable: false
    submodule-recursive: true
    submodule-timeout: 10
    pre_docker_build_script: "# pre docker build script goes here"
    post_docker_build_script: "# post docker build script goes here"
    disable-job: "false"
    docker-root: "$WORKSPACE"
    docker-build-args: ""
    git-url: "$GIT_URL/$PROJECT"
    # use trivial tag since images are not pushed
    container-tag-method: "latest"
    container-tag-yaml-dir: ""
    # PackageCloud account ID. Example: oran
    packagecloud-account: ""
    # PackageCloud repository. Example: master, stage
    packagecloud-repo: ""
    # DEB Packages of Distro/Version. Example: ubuntu/bionic debian/stretch
    debian-distribution-version: ""
    # RPM Packages of Distro/Version. Example: el/5 el/4
    rpm-distribution-version: ""

    disabled: "{disable-job}"

    properties:
      - lf-infra-properties:
          build-days-to-keep: "{build-days-to-keep}"

    parameters:
      - lf-infra-parameters:
          branch: "{branch}"
          project: "{project}"
          refspec: "refs/heads/{branch}"
          stream: "{stream}"

    wrappers:
      - lf-infra-wrappers:
          build-timeout: "{build-timeout}"
          jenkins-ssh-credential: "{jenkins-ssh-credential}"

    publishers:
      - lf-infra-publish

- oran_docker_ci_merge_common: &oran_docker_ci_merge_common
    name: oran-docker-ci-merge-common
    cron: ""

    scm:
      - lf-infra-gerrit-scm:
          jenkins-ssh-credential: "{jenkins-ssh-credential}"
          git-url: "{git-url}"
          refspec: "$GERRIT_REFSPEC"
          branch: "$GERRIT_BRANCH"
          submodule-disable: "{submodule-disable}"
          submodule-recursive: "{submodule-recursive}"
          submodule-timeout: "{submodule-timeout}"
          choosing-strategy: gerrit

    gerrit_merge_triggers:
      - change-merged-event
      - comment-added-contains-event:
          comment-contains-value: remerge$

    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: ".*"

    # github_included_regions MUST match gerrit_trigger_file_paths
    github_included_regions:
      - ".*"

    builders:
      - lf-infra-pre-build
      - config-file-provider:
          files:
            - file-id: ".packagecloud"
              target: "$HOME/.packagecloud"
      - lf-infra-docker-login:
          global-settings-file: "global-settings"
          settings-file: "{mvn-settings}"
      - shell: "{pre_docker_build_script}"
      - lf-docker-get-container-tag:
          container-tag-method: "{container-tag-method}"
          container-tag-yaml-dir: "{container-tag-yaml-dir}"
          docker-root: "{docker-root}"
      - lf-docker-build:
          docker-build-args: "{docker-build-args}"
          docker-name: "{docker-name}"
          docker-root: "{docker-root}"
          container-public-registry: "{container-public-registry}"
          container-push-registry: "{container-push-registry}"
      - shell: "{post_docker_build_script}"
      - inject:
          properties-content: |
            PACKAGECLOUD_ACCOUNT={packagecloud-account}
            PACKAGECLOUD_REPO={packagecloud-repo}
            DEBIAN_DISTRIBUTION_VERSION={debian-distribution-version}
            RPM_DISTRIBUTION_VERSION={rpm-distribution-version}
      - oran-packagecloud-push
      - lf-provide-maven-settings-cleanup

- job-template:
    name: "{project-name}-docker-ci-merge-{stream}"
    id: oran-gerrit-docker-ci-merge

    <<: *oran_docker_ci_common
    # yamllint disable-line rule:key-duplicates
    <<: *oran_docker_ci_merge_common

    triggers:
      - timed: "{obj:cron}"
      - gerrit:
          server-name: "{gerrit-server-name}"
          trigger-on: "{obj:gerrit_merge_triggers}"
          projects:
            - project-compare-type: ANT
              project-pattern: "{project}"
              branches:
                - branch-compare-type: ANT
                  branch-pattern: "**/{branch}"
              file-paths: "{obj:gerrit_trigger_file_paths}"
