---
- project:
    name: ric-plt-lib-rmr-project-view
    project-name: ric-plt-lib-rmr
    views:
      - project-view

- project:
    name: ric-plt-lib-rmr-info
    project: ric-plt/lib/rmr
    project-name: ric-plt-lib-rmr
    build-node: centos7-builder-1c-1g
    jobs:
      - gerrit-info-yaml-verify

# 2019 CI - build RMR in a docker container

- rmr_common: &rmr_common
    name: rmr-common
    # git repo
    project: ric-plt/lib/rmr
    # jenkins job name prefix
    project-name: ric-plt-lib-rmr
    # maven settings file has credentials
    mvn-settings: ric-plt-lib-rmr-settings
    # image is not pushed, use trivial tag
    container-tag-method: latest
    # image name
    docker-name: '{name}'
    # use host network for network resources
    docker-build-args: '--network=host -f ci/Dockerfile'
    # exclude changes in the bindings subdirectory
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: '^((?!src/bindings|\/COMMIT_MSG).)*$'

# verify RMR changes targeted at any branch
- project:
    <<: *rmr_common
    name: ric-plt-lib-rmr-verify
    jobs:
      - gerrit-docker-verify
    stream:
      - all:
          branch: '*'

# build RMR and publish to PackageCloud.io on merge to master branch
- project:
    <<: *rmr_common
    name: ric-plt-lib-rmr-merge
    jobs:
      - oran-gerrit-docker-ci-pc-merge
    stream:
      - master:
          branch: master

# promote packages from staging to release
- project:
    project: ric-plt/lib/rmr
    project-name: ric-plt-lib-rmr
    name: ric-plt-lib-rmr-release-verify
    branch: master
    build-node: centos7-builder-1c-1g
    jobs:
      - gerrit-packagecloud-release-verify
      - gerrit-packagecloud-release-merge

# 2020 CI - build RMR on the node directly

- rmr_cmake_common: &rmr_cmake_common
    name: rmr-cmake-common
    # git repo
    project: ric-plt/lib/rmr
    # jenkins job name prefix
    project-name: ric-plt-lib-rmr
    # maven settings file has credentials
    mvn-settings: ric-plt-lib-rmr-settings
    # use an ubuntu
    build-node: ubuntu1804-builder-2c-2g

- project:
    name: ric-plt-lib-rmr-cmake
    <<: *rmr_cmake_common
    # exclude changes in the bindings subdirectory
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: '^((?!src/bindings|\/COMMIT_MSG).)*$'
    jobs:
      - gerrit-cmake-verify
    stream:
      - master:
          branch: master

- project:
    name: ric-plt-lib-rmr-sonar
    <<: *rmr_cmake_common
    # bug in lf-c-cpp-jobs.yaml?
    stream: ignore-me
    # bug in cmake-sonar.sh?
    make-opts: all
    # config for cmake-sonar.sh
    sonar-scanner-version: 4.2.0.1873
    sonarcloud-api-token: '{sonarcloud_api_token}'
    sonarcloud-organization: '{sonarcloud_project_organization}'
    sonarcloud-project-key: '{sonarcloud_project_organization}_{project-name}'
    jobs:
      - gerrit-cmake-sonar

# RMR Python bindings

- rmr_python_common: &rmr_python_common
    name: rmr-python-common
    # git repo
    project: ric-plt/lib/rmr
    # jenkins job name prefix
    project-name: ric-plt-lib-rmr-python
    # maven settings file has credentials
    mvn-settings: ric-plt-lib-rmr-settings
    # sigul requires centos
    build-node: centos7-builder-1c-1g
    # install prereqs
    pre-build-script: !include-raw-escape: ../shell/install-rpm-nng-rmr.sh
    # bindings live in a subdirectory
    tox-dir: src/bindings/rmr-python
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'src/bindings/rmr-python/.*'

# verify binding changes targeted at any branch
- project:
    <<: *rmr_python_common
    name: ric-plt-lib-rmr-python-pypi-verify
    stream:
      - all:
          branch: '*'
    jobs:
      - gerrit-pypi-verify

# build and publish distributions to test.pypi.org from master
- project:
    <<: *rmr_python_common
    name: ric-plt-lib-rmr-python-pypi-merge
    stream:
      - master:
          branch: master
    jobs:
      - gerrit-pypi-merge

# promote distributions from test to pypi.org
- project:
    <<: *rmr_python_common
    name: ric-plt-lib-rmr-python-pypi-release
    jobs:
      - '{project-name}-gerrit-pypi-release-jobs'

- project:
    <<: *rmr_python_common
    name: ric-plt-lib-rmr-python-sonar
    branch: master
    python-version: python3
    # the pre-build-script installs debian packages
    build-node: ubuntu1804-builder-2c-2g
    # install prereqs
    pre-build-script: !include-raw-escape: ../shell/install-deb-nng-rmr.sh
    sonarcloud: true
    sonarcloud-api-token: '{sonarcloud_api_token}'
    sonarcloud-project-key: '{sonarcloud_project_organization}_{project-name}'
    sonarcloud-project-organization: '{sonarcloud_project_organization}'
    tox-dir: src/bindings/rmr-python
    jobs:
      - gerrit-tox-sonar
