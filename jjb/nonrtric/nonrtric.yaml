---
- project:
    name: nonrtric-project-view
    project-name: nonrtric
    views:
      - project-view

- _nonrtric_jdk_common: &nonrtric_jdk_common
    # git repo
    project: nonrtric
    # jenkins job name prefix
    project-name: nonrtric
    # maven settings file has docker credentials
    mvn-settings: nonrtric-settings
    mvn-version: mvn36
    java-version: openjdk17

- _nonrtric_docker_common: &nonrtric_docker_common
    <<: *nonrtric_jdk_common
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: "--network=host"

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-release
    # maven release requires sigul which requires centos
    # container release requires docker
    build-node: centos7-docker-2c-8g
    jobs:
      - "{project-name}-gerrit-release-jobs"

# Jobs to verify / build / sonar for functional releaseable funtions
- project:
    <<: *nonrtric_docker_common
    name: nonrtric-plt-auth-token-fetch
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/nonrtric-plt-auth-token-fetch"
    # Directory with Dockerfile
    docker-root: "auth-token-fetch"
    # Directory where go test should be run
    go-root: "auth-token-fetch"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "auth-token-fetch/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
      - gerrit-go-verify
    stream:
      - master:
          branch: master
      - g-release:
          java-version: openjdk11
          branch: g-release
      - h-release:
          branch: h-release
      - i-release:
          branch: i-release

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-plt-auth-token-fetch-sonar
    project-name: nonrtric-plt-auth-token-fetch
    # prescan script requires ubuntu
    # golang is only on docker-enabled nodes
    build-node: ubuntu1804-docker-4c-4g
    sonar-prescan-script: !include-raw-escape: prescan-nonrtric-auth-token-fetch-ubuntu.sh
    sonar-project-file: ""
    java-version: openjdk11
    # use sonarcloud values from defaults.yaml
    sonar-properties: !include-raw-escape: sonar-project.properties
    jobs:
      - gerrit-sonar-prescan-script

# Jobs to verify / build sample uService images
- project:
    <<: *nonrtric_docker_common
    name: nonrtric-sample-helloworld-sme-invoker
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/nonrtric-sample-helloworld-sme-invoker"
    # Directory with Dockerfile
    docker-root: "sample-services/hello-world-sme-invoker"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "sample-services/hello-world-sme-invoker/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-sample-helloworld
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/nonrtric-sample-helloworld"
    # Directory with Dockerfile
    docker-root: "sample-services/hello-world"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "sample-services/hello-world/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-sample-icsproducer
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/nonrtric-sample-icsproducer"
    # Directory with Dockerfile
    docker-root: "sample-services/ics-producer-consumer/producer"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "sample-services/ics-producer-consumer/producer/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-sample-icsconsumer
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/nonrtric-sample-icsconsumer"
    # Directory with Dockerfile
    docker-root: "sample-services/ics-producer-consumer/consumer"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "sample-services/ics-producer-consumer/consumer/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-sample-icsproducerconsumer
    project-name: "{name}"
    project: "nonrtric"  # repo
    build-timeout: 20 # min
    build-node: ubuntu1804-docker-4c-4g
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "sample-services/ics-producer-consumer/.*"
    script: !include-raw-escape:
      - ics-producer-consumer-tests.sh
    jobs:
      - oran-shell-verify
    stream:
      - master:
          branch: master

# Jobs to verify / build images for testing
- project:
    <<: *nonrtric_docker_common
    name: nonrtric-test-kafka-procon
    project-name: "{name}"
    # image name
    docker-name: "kafka-procon"
    # Directory with Dockerfile
    docker-root: "test/kafka-procon"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "test/kafka-procon/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - gerrit-docker-verify
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-test-http-https-proxy
    project-name: "{name}"
    # image name
    docker-name: "nodejs-kube-proxy"
    # Directory with Dockerfile
    docker-root: "test/http-https-proxy"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "test/http-https-proxy/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - gerrit-docker-verify
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-test-cr
    project-name: "{name}"
    # image name
    docker-name: "callback-receiver"
    # Directory with Dockerfile
    docker-root: "test/cr"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "test/cr/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - gerrit-docker-verify
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-test-prodstub
    project-name: "{name}"
    # image name
    docker-name: "producer-stub"
    # Directory with Dockerfile
    docker-root: "test/prodstub"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "test/prodstub/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - gerrit-docker-verify
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_docker_common
    name: nonrtric-test-mrstub
    project-name: "{name}"
    # image name
    docker-name: "mrstub"
    # Directory with Dockerfile
    docker-root: "test/mrstub"
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "test/mrstub/.*"
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - gerrit-docker-verify
    stream:
      - master:
          branch: master
