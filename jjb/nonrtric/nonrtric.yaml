---
- project:
    name: nonrtric-project-view
    project-name: nonrtric
    views:
      - project-view

- project:
    name: nonrtric-info
    project: nonrtric
    project-name: nonrtric
    build-node: centos7-builder-1c-1g
    jobs:
      - gerrit-info-yaml-verify

- nonrtric_jdk_common: &nonrtric_jdk_common
    name: nonrtric-jdk-common
    # git repo
    project: nonrtric
    # jenkins job name prefix
    project-name: nonrtric
    # maven settings file has docker credentials
    mvn-settings: nonrtric-settings
    mvn-version: mvn36
    java-version: openjdk11

- project:
    <<: *nonrtric_jdk_common
    mvn-params: -Dbuild.number=${{BUILD_NUMBER}}
    jobs:
      - gerrit-maven-docker-verify
      - gerrit-maven-docker-merge
      - gerrit-maven-docker-stage
    stream:
      - e-release:
          branch: e-release

# nonrtric:policy-agent/
# Maven artifacts for nonrtric-policy-agent/
- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-policy-agent
    project-name: '{name}'
    mvn-opts: '-Ddocker.skip=true'
    mvn-params: '-f policy-agent/'
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'policy-agent/.*'
    build-node: ubuntu1804-builder-4c-4g
    jobs:
      - gerrit-maven-verify
      - gerrit-maven-merge
      - gerrit-maven-stage
      - gerrit-maven-clm
    stream:
      - dawn:
          branch: dawn

# nonrtric:sdnc-a1-controller
# Maven artifacts for nonrtric-sdnc-a1-controller
- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-sdnc-a1-controller
    project-name: '{name}'
    mvn-opts: '-Ddocker.skip=true'
    mvn-params: '-f sdnc-a1-controller/northbound'
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'sdnc-a1-controller/northbound/.*'
    build-node: ubuntu1804-builder-4c-4g
    jobs:
      - gerrit-maven-verify
      - gerrit-maven-merge
      - gerrit-maven-stage
      - gerrit-maven-clm
    stream:
      - dawn:
          branch: dawn
      - e-release:
          branch: e-release

# nonrtric:enrichment-coordinator-service
# Maven artifacts for nonrtric-enrichment-coordinator-service
- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-enrichment-coordinator-service
    project-name: '{name}'
    mvn-opts: '-Ddocker.skip=true'
    mvn-params: '-f enrichment-coordinator-service'
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'enrichment-coordinator-service/.*'
    build-node: ubuntu1804-builder-4c-4g
    jobs:
      - gerrit-maven-verify
      - gerrit-maven-merge
      - gerrit-maven-stage
      - gerrit-maven-clm
    stream:
      - dawn:
          branch: dawn

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-auth-token-fetch
    project-name: '{name}'
    # image name
    docker-name: 'o-ran-sc/nonrtric-auth-token-fetch'
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory with Dockerfile
    docker-root: 'auth-token-fetch'
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory where go test should be run
    go-root: 'auth-token-fetch'
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'auth-token-fetch/.*'
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
      - gerrit-go-verify
    stream:
      - master:
          branch: master

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-auth-token-fetch-sonar
    project-name: nonrtric-auth-token-fetch
    # prescan script requires ubuntu
    # golang is only on docker-enabled nodes
    build-node: ubuntu1804-docker-4c-4g
    sonar-prescan-script: !include-raw-escape: prescan-nonrtric-auth-token-fetch-ubuntu.sh
    sonar-project-file: ""
    java-version: openjdk11
    # use sonarcloud values from defaults.yaml
    sonar-properties: !include-raw: sonar-project.properties
    jobs:
      - gerrit-sonar-prescan-script

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-release
    # maven release requires sigul which requires centos
    # container release requires docker
    build-node: centos7-docker-2c-8g
    jobs:
      - '{project-name}-gerrit-release-jobs'

# Usecases
- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-o-ru-closed-loop-recovery
    project-name: '{name}'
    # image name
    docker-name: 'o-ran-sc/nonrtric-o-ru-closed-loop-recovery'
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory with Dockerfile
    docker-root: 'test/usecases/oruclosedlooprecovery/scriptversion/app'
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'test/usecases/oruclosedlooprecovery/scriptversion/app/.*'
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master
      - dawn:
          branch: dawn
      - e-release:
          branch: e-release

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-o-ru-closed-loop-consumer
    project-name: '{name}'
    # image name
    docker-name: 'o-ran-sc/nonrtric-o-ru-closed-loop-consumer'
    # get tag from YAML
    container-tag-method: yaml-file
    # use host network to clone from our gerrit
    docker-build-args: '--network=host'
    # Directory with Dockerfile
    docker-root: 'test/usecases/oruclosedlooprecovery/goversion'
    # Directory where go test should be run
    go-root: 'test/usecases/oruclosedlooprecovery/goversion'
    # Limit build trigger to appropriate files
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: 'test/usecases/oruclosedlooprecovery/goversion/.*'
    build-node: ubuntu1804-docker-4c-4g
    # Includes verify and merge jobs
    jobs:
      - "{project-name}-gerrit-docker-jobs"
      - gerrit-go-verify
    stream:
      - master:
          branch: master
      - e-release:
          branch: e-release

- project:
    <<: *nonrtric_jdk_common
    name: nonrtric-o-ru-closed-loop-consumer-sonar
    project-name: nonrtric-o-ru-closed-loop-consumer-sonar
    # prescan script requires ubuntu
    # golang is only on docker-enabled nodes
    build-node: ubuntu1804-docker-4c-4g
    sonar-prescan-script: !include-raw-escape: prescan-oruclosedloopconsumer-ubuntu.sh
    sonar-project-file: ""
    java-version: openjdk11
    # use sonarcloud values from defaults.yaml
    sonar-properties: |
        # Required metadata
        sonar.login={sonarcloud_api_token}
        sonar.projectKey={sonarcloud_project_organization}_nonrtric-o-ru-closed-loop-consumer
        sonar.organization={sonarcloud_project_organization}
        # Encoding
        sonar.build.sourceEncoding=UTF-8
        # Language
        sonar.language=go
        # Source
        sonar.sources=.
        # Unit tests
        sonar.go.coverage.reportPaths=test/usecases/oruclosedlooprecovery/goversion/coverage.txt
        # Inclusions
        sonar.inclusions=test/usecases/oruclosedlooprecovery/goversion/internal/**/**.go,test/usecases/oruclosedlooprecovery/goversion/**.go
        # Exclusions
        sonar.exclusions=test/usecases/oruclosedlooprecovery/goversion/mocks/**.go,test/usecases/oruclosedlooprecovery/goversion/internal/**/**_test.go,test/usecases/oruclosedlooprecovery/goversion/**_test.go,test/usecases/oruclosedlooprecovery/goversion/simulator/**.go
    jobs:
      - gerrit-sonar-prescan-script
