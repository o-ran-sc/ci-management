---
- project:
    name: ric-app-mc-project-view
    project-name: ric-app-mc
    views:
      - project-view

- _mc_common: &mc_common # values apply to all MC projects
    name: mc-common
    # git repo
    project: ric-app/mc
    # maven settings file has docker credentials
    mvn-settings: ric-app-mc-settings
    # jenkins job name prefix
    project-name: ric-app-mc
    # test scripts depend on this name
    build-dir: $WORKSPACE/.build
    # Use ubuntu base for cmake v3
    # Use docker variant for packagecloud ruby gem
    build-node: ubuntu1804-docker-4c-4g

- project:
    <<: *mc_common
    name: ric-app-mc
    # jenkins job name prefix
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/{name}"
    docker-root: mc-core
    # source of docker tag
    container-tag-method: yaml-file
    container-tag-yaml-dir: "{docker-root}"
    # use host network
    docker-build-args: "--network=host"
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "{docker-root}/.*"
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *mc_common
    name: ric-app-mc-listener
    # jenkins job name prefix
    project-name: "{name}"
    # image name
    docker-name: "o-ran-sc/{name}"
    docker-root: sidecars/listener
    # source of docker tag
    container-tag-method: yaml-file
    container-tag-yaml-dir: "{docker-root}"
    # use host network
    docker-build-args: "--network=host"
    gerrit_trigger_file_paths:
      - compare-type: REG_EXP
        pattern: "{docker-root}/.*"
    jobs:
      - "{project-name}-gerrit-docker-jobs"
    stream:
      - master:
          branch: master

- project:
    <<: *mc_common
    name: ric-app-mc-release
    project-name: ric-app-mc
    # maven release requires sigul which requires centos
    # container release requires docker
    build-node: centos7-docker-2c-8g
    jobs:
      - "{project-name}-gerrit-release-jobs"

# drive unit tests from root CMake file to gen/analyse coverage data
- project:
    <<: *mc_common
    name: ric-app-mc-sonarqube
    project-name: ric-app-mc
    cmake-opts: ""
    make-opts: test ARGS=-V
    sonar-project-file: ""
    sonar-properties: |
      sonar.login={sonarcloud_api_token}
      sonar.projectKey={sonarcloud_project_organization}_{project-name}
      sonar.projectName={project-name}
      sonar.organization={sonarcloud_project_organization}
      sonar.build.sourceEncoding=UTF-8
      sonar.sources=sidecars/listener/src,mc-core/mc/mcnib
      sonar.cfamily.build-wrapper-output=$WORKSPACE/bw-output
      sonar.cfamily.gcov.reportsPath=/tmp/gcov_rpts
      sonar.cfamily.threads=2
    jobs:
      - gerrit-cmake-sonarqube
