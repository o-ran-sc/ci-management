---
- project:
    name: ric-plt-xapp-frame-cpp-project-view
    project-name: ric-plt-xapp-frame-cpp
    views:
      - project-view

- project:
    name: ric-plt-xapp-frame-cpp-info
    project: ric-plt/xapp-frame-cpp
    project-name: ric-plt-xapp-frame-cpp
    build-node: centos7-builder-1c-1g
    jobs:
      - gerrit-info-yaml-verify

- xapp_frame_cpp_common: &xapp_frame_cpp_common
    name: xapp-frame-cpp-common
    # git repo
    project: ric-plt/xapp-frame-cpp
    # jenkins job name prefix
    project-name: ric-plt-xapp-frame-cpp
    # maven settings file has credentials to archive artifacts
    mvn-settings: ric-plt-xapp-frame-cpp-settings
    # test scripts depend on this name
    build-dir: $WORKSPACE/build
    # Use ubuntu base for cmake v3
    # Use docker variant for packagecloud ruby gem
    build-node: ubuntu1804-docker-4c-4g
    # install alien package to build RPMS
    # install RMR per version file in repo for ubuntu
    pre-build: !include-raw-escape:
      - ../shell/install-deb-alien.sh
      - ../shell/install-deb-rmr3.sh

# development library - publish only
- project:
    name: xapp-frame-cpp-lib-dev
    <<: *xapp_frame_cpp_common
    project-name: ric-plt-xapp-frame-cpp-dev
    cmake-opts: -DDEV_PKG=1
    make-opts: package ARGS=-V
    jobs:
      - oran-gerrit-cmake-pc-stage
    stream:
      - master:
          branch: master

# runtime library - test and publish
- project:
    name: xapp-frame-cpp-lib-rt
    <<: *xapp_frame_cpp_common
    project-name: ric-plt-xapp-frame-cpp-lib
    cmake-opts: -DDEV_PKG=0
    make-opts: test package ARGS=-V
    jobs:
      - gerrit-cmake-verify
      - oran-gerrit-cmake-pc-stage
    stream:
      - master:
          branch: master

# analyze C code and test coverage
- project:
    name: xapp-frame-cpp-sonarqube
    <<: *xapp_frame_cpp_common
    make-opts: test ARGS=-V
    sonar-project-file: ""
    sonar-properties: |
        sonar.login={sonarcloud_api_token}
        sonar.projectKey={sonarcloud_project_organization}_{project-name}
        sonar.projectName={project-name}
        sonar.organization={sonarcloud_project_organization}
        sonar.build.sourceEncoding=UTF-8
        sonar.sources=src
        sonar.cfamily.build-wrapper-output=$WORKSPACE/bw-output
        sonar.cfamily.gcov.reportsPath=test
    jobs:
      - gerrit-cmake-sonarqube
